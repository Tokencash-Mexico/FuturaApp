apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

android {
    compileSdkVersion target_sdk
    buildToolsVersion build_tools_version

    androidExtensions {
        experimental = true
    }

    defaultConfig {
        applicationId "com.futura.app"
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        main {
            resources {
                srcDirs 'src/main/resources', 'src/sharedTest/resources/'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }

    buildFeatures{
        viewBinding true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = jvm_target
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        unitTests {
            includeAndroidResources = true
        }
        animationsDisabled = true
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/dokka"
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    // Standar libreries
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "androidx.legacy:legacy-support-v4:$legacy_version"

    // Other libraries
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.github.MohammadSianaki:Retrofit2-Flow-Call-Adapter:$retrofit_flow_adapter_version"

    //Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    //// Koin Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    //// Koin for Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    //// Koin for Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //Retrofit
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    //For serialising JSONP add converter-scalars
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    //An Adapter for adapting RxJava 2.x types.
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'

    //implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggin_interceptor_version"

    //Lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    //KotlinPreferences
    implementation "com.chibatching.kotpref:kotpref:$kotlin_preferences_version"
    implementation "com.chibatching.kotpref:gson-support:$kotlin_preferences_version"

    //Encrypted shared preferences
    implementation "androidx.security:security-crypto:$encrypted_preferences_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Dexter
    implementation 'com.karumi:dexter:6.2.2'

    //Maps
    implementation "com.google.android.gms:play-services-location:$google_version"
    implementation "com.google.android.gms:play-services-maps:$maps_version"

    implementation project(':data')
    implementation project(':domain')
}